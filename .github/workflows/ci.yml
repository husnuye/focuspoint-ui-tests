name: CI - WebTests

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      # Install required Linux dependencies for Playwright on Ubuntu runners
      - name: Install Playwright Linux deps
        run: npx playwright install-deps

      - name: Restore
        run: dotnet restore WebTests.csproj

      - name: Build (Debug)
        run: dotnet build WebTests.csproj --no-restore --configuration Debug

      # Install Playwright browsers for .NET (script generated by Playwright)
      - name: Install Playwright Browsers
        run: pwsh bin/Debug/net9.0/playwright.ps1 install

      # Ensure appsettings.json exists in CI (use sample to avoid committing secrets)
      - name: Ensure appsettings.json from sample
        run: |
          mkdir -p Config
          if [ -f Config/appsettings.sample.json ]; then
            cp -f Config/appsettings.sample.json Config/appsettings.json
          fi

      # Run tests using runsettings (produces TRX and Allure artifacts)
      - name: Run tests (with runsettings)
        run: dotnet test WebTests.csproj --configuration Debug --settings ./Tests.runsettings --logger "trx;LogFileName=test.trx"

      # Upload Allure raw results for later viewing (e.g., with allure serve)
      - name: Upload Allure Results
        uses: actions/upload-artifact@v4
        with:
          name: allure-results
          path: bin/Debug/net9.0/allure-results

      # Upload VSTest TRX results to inspect test logs in Actions UI
      - name: Upload TRX Results
        uses: actions/upload-artifact@v4
        with:
          name: test-trx
          path: TestResults
